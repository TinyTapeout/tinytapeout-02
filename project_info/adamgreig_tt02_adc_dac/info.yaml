---
# TinyTapeout project information
project:
  wokwi_id: 0
  source_files:
    - adc_dac.v
  top_module:  "adamgreig_tt02_adc_dac"

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it.
#
# Here is an example: https://github.com/mattvenn/tinytapeout_m_segments/blob/main/info.yaml
#
# This info will be automatically collected and used to make a datasheet for the chip.
documentation: 
  author:       "Adam Greig"
  discord:      "adamgreig#1307"
  title:        "Sigma-Delta ADC/DAC"
  description:  "Simple ADC and DAC"
  how_it_works: |
    This project is built on a simple sigma-delta DAC. The DAC is given an n-bit
    control word and generates a single-bit digital output where the pulse
    density is proportional to that control word. By integrating this pulse
    train, for example with an RC filter, an analogue output voltage is produced.

    The ADC operates by generating an analogue output voltage which is compared
    to the analogue input by an off-chip comparator. The comparator result is
    used as a digital input to a simple control loop that adjusts the output
    voltage so that it tracks the input signal. The control word for the DAC
    generating the output voltage is then the ADC reading. This control word
    is regularly transmitted as hex-encoded ASCII over a UART running at the
    clock rate.

    A second dedicated 8-bit DAC is controlled by received words over a UART.
    Transmit the control word at 1/10th the clock speed into `uart_in`, and
    add a second external RC circuit to filter `dac_out` to an analogue voltage.
  how_to_test: |
    Ensure in[0] is clocked. Connect out[0] through a series resistor to both
    a capacitor to ground and the non-inverting input of a comparator. Connect
    the analogue input to measure to the inverting input, and connect the
    comparator output to in[2]. Connect out[1] to a UART receiver at the clock
    rate and receive ADC readings as hex-encoded ASCII lines.

    Connect out[2] to a second RC filter, and feed one-byte DAC settings
    to the UART on in[3] at a baud rate 1/10th the clock. Measure the
    resulting analogue output.
  external_hw:  "Comparator, resistor, capacitor"
  language:     "Amaranth"
  doc_link:     "https://github.com/adamgreig/tt02-adc-dac"
  clock_hz:     6000
  picture:      ""
  inputs:
    - clock
    - reset
    - adc_in
    - uart_in
    - none
    - none
    - none
    - none
  outputs:
    - adc_out
    - uart_out
    - dac_out
    - none
    - none
    - none
    - none
    - none

