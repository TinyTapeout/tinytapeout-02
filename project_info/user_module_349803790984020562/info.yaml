--- 
# TinyTapeout project information
project:
  wokwi_id: 349803790984020562
#  source_files:        # If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. Source files must be in ./src
#    - counter.v
#    - decoder.v
#  top_module:  "seven_segment_seconds"      # put the name of your top module here, make it unique by prepending your github username

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it.
#
# Here is an example: https://github.com/mattvenn/tinytapeout_m_segments/blob/main/info.yaml
#
# This info will be automatically collected and used to make a datasheet for the chip.
documentation: 
  author:       "MG"      # Your name
  discord:      ""      # Your discord handle - make sure to include the # part as well
  title:        "3-bit adder"      # Project title
  description:  "Add two 3-bit numbers"      # Short description of what your project does
  how_it_works: "Adds A0 A1 A2 and B0 B1 B2 implemented using one half-adder and two full-adders. LEDs light up correspondingly."
  how_to_test:  "Result: binary added score at output LED"
  external_hw:  ""      # Describe any external hardware needed
  language:     "wokwi" # other examples include Verilog, Amaranth, VHDL, etc
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     0       # Clock frequency in Hz (if required) we are expecting max clock frequency to be ~6khz. Provided on input 0.
  picture:      ""      # relative path to a picture in your repository
  inputs:               # a description of what the inputs do
    - A0, lowest order bit of first number
    - A1, second order bit of first number
    - A2, highest order bit of first number
    - B0, lowest order bit of second number
    - B1, second order bit of second number
    - B2, highest order bit of second number
    - none
    - none
  outputs:
    - segment a         # a description of what the outputs do
    - segment b
    - segment c
    - segment d
    - segment e
    - segment f
    - segment g
    - none

