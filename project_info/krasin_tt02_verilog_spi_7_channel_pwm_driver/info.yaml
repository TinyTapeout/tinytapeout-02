--- 
# TinyTapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID
  source_files:        # If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. Source files must be in ./src
    - pwm.v
  top_module:  "krasin_tt02_verilog_spi_7_channel_pwm_driver"      # put the name of your top module here, make it unique by prepending your github username

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it.
#
# Here is an example: https://github.com/mattvenn/tinytapeout_m_segments/blob/main/info.yaml
#
# This info will be automatically collected and used to make a datasheet for the chip.
documentation: 
  author:       "Ivan Krasin"      # Your name
  discord:      "krasin"      # Your discord handle
  title:        "7-channel PWM driver controlled via SPI bus"      # Project title
  description:  "PWM driver with 7 channels and 256 PWM levels from 0 to 1"      # Short description of what your project does
  how_it_works: "uses a 8-bit counter to drive PWM on 7 output channels. Each channel is controlled by a dedicated 8-bit register that specifies its PWM level: 0 means always off, 1 is for 1/255 on, 5 is for 5/255 on and 255 is 255/255 (always on)"  # Longer description of how the project works
  how_to_test:  "after reset, all output pins will be low. Use SPI writes with register addresses (0..6) to set 8-bit PWM levels. The corresponding pin will start oscillating between 0 and 1 according to the clock and the set level."  # Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  external_hw:  ""      # Describe any external hardware needed
  language:     "verilog" # other examples include Verilog, Amaranth, VHDL, etc
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     1000    # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository
  inputs:               # a description of what the inputs do
    - clock
    - reset # when set, internal state will be reset to default values.
    - cs # SPI chip select pin.
    - sclk # SPI clock, must be at least twice slower than the primary clock (CPOL=0).
    - mosi # master out, slave in (CPHA=0)
    - reserved
    - reserved
    - reserved
  outputs:
    - out0 # channel 0 for PWM
    - out1 # channel 1 for PWM
    - out2 # channel 2 for PWM
    - out3 # channel 3 for PWM
    - out4 # channel 4 for PWM
    - out5 # channel 5 for PWM
    - out6 # channel 6 for PWM
    - miso # master in, slave out (CPHA=0)
